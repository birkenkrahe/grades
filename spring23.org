#+title: Spring 23 grades
#+property: header-args:R :session *R Grades* :results output :exports both
#+startup: overview hideblocks indent inlineimages
#+options: toc:1 num:1 ^:nil
* Introduction to programming CSC 100

- This section contains visualization of test results for the
  Introduction to Programming class CSC 100 in Spring 2023.

- The visualizations were created with the statistical programming
  language R. If you want to know more about R or even learn it
  (fast), check out this excellent tutorial by Norm Matloff, "fasteR:
  Fast Lane to Learning R!" for non-computer scientists.

** Getting the data

- Enter vector data manually
- Non-writing participants are registered as ~NA~
- Tests carried different number of available points

#+name: cc_data
#+begin_src R
  ## Test 1 had 12 points
  cc_results_1 <- c(8.83,7.5,8,7.33,7.5,9.67,7.08,7.83,7.17,8,7.67,6.83,8.17)/10 * 100
  format(cc_results_1,digits=3)
  ## Test 2 had 10 points
  cc_results_2 <- c(15.65,18.5,7.25,10.04,NA,18.75,17.08,16.08,14.48,17,14.48,13.36,16.35)/20 * 100
  format(cc_results_2,digits=3)
#+end_src

#+RESULTS: cc_data
:  [1] "88.3" "75.0" "80.0" "73.3" "75.0" "96.7" "70.8" "78.3" "71.7" "80.0"
: [11] "76.7" "68.3" "81.7"
:  [1] "78.2" "92.5" "36.2" "50.2" "  NA" "93.8" "85.4" "80.4" "72.4" "85.0"
: [11] "72.4" "66.8" "81.8"

** Plotting the data
- Compute the averages for each results vector (without ~NA~)
- Determine min and max values for the plotting window
- Plot densities and averages and attach text labels
- Color palette are Illinsky and Steele's recommended colors (except
  white): red, green, yellow, blue, black, pink, cyan, gray, orange,
  brown, purple

*** Density distribution plotting
#+name: cc_density
#+begin_src R :file ./img/ccTestSP23.png :results output graphics file :exports both
  cc_avg_1 <- mean(cc_results_1, na.rm=TRUE);
  cc_density_1 <- density(cc_results_1, na.rm=TRUE)
  cc_avg_2 <- mean(cc_results_2, na.rm=TRUE);
  cc_density_2 <- density(cc_results_2, na.rm=TRUE)
  plot(x=cc_density_1, col="red", lwd=2,
       main="Test results CSC 100 - Spring 2023",
       xlab="Percentage (%)",
       xaxt="n",yaxt="n",ylab="")
  par(new=TRUE)
  plot(x=cc_density_2, col="green", lwd=2,
       main="", xlab="", yaxt="n", ylab="")
  abline(v=cc_avg_1, col="red", lty=3, lwd=2)
  abline(v=cc_avg_2, col="green", lty=3, lwd=2)
  legend("topleft",
         legend=c(
           paste("Test 1 (",format(cc_avg_1,digits=3),"%)"),
           paste("Test 2 (",format(cc_avg_2,digits=3),"%)")),
         lwd=2, col=c(test1="red",
                      test2="green"),
         bty="n")
#+end_src

#+RESULTS: cc_density
[[file:./img/ccTestSP23.png]]
*** Histogram
#+name: cc_histogram
#+begin_src R :results silent
  hist(cc_results_1,
       col="red",
       main="CSC 100/Sp23 - Test 1",
       xlab="Percentage",
       xlim=c(30,100))
  abline(v=mean(cc_results_1,na.rm=TRUE),
         lwd=2,
         lty=2)
  legend("topleft",
         legend=c(
           paste("\u03BC=",format(cc_avg_1,digits=3),"%")),
         bty="n")
  hist(cc_results_2,
       col="green",
       main="CSC 100/Sp23 - Test2",
       xlab="Percentage",
       xlim=c(30,100))
  abline(v=mean(cc_results_2,na.rm=TRUE),
         lwd=2,
         lty=2)
  legend("topleft",
         legend=c(
           paste("\u03BC=",format(cc_avg_2,digits=3),"%")),
         bty="n")
#+end_src

#+begin_src R :file ./img/ccTestSP23hist.png :results output graphics file :exports both :noweb yes
  par(mfrow=c(1,2), pty='s')
  <<cc_histogram>>
#+end_src

#+RESULTS:
[[file:./img/ccTestSP23hist.png]]

*** Boxplot
- Align boxplot scales:
  #+begin_src R :results silent
    ylim <- range(c(
      min(cc_results_1,cc_results_2,na.rm=TRUE),
      max(cc_results_1,cc_results_2,na.rm=TRUE)))
  #+end_src
- Boxplot:
  #+name: cc_boxplot
  #+begin_src R :noweb yes :results silent
    boxplot(cc_results_1,
            col="red",
            horizontal=TRUE,
            main="CSC 100 - Spring 2023\nTest 1",
            xlab="Percentage",
            ylim=ylim)
    abline(v=mean(cc_results_1,na.rm=TRUE),lty=2)
    boxplot(cc_results_2,
            col="green",
            horizontal=TRUE,
            main="CSC 100 - Spring 2023\nTest 2",
            xlab="Percentage",
            ylim=ylim)
    abline(v=mean(cc_results_2,na.rm=TRUE),
           lty=2)
  #+end_src
  #+begin_src R :file ./img/ccTestSP23box.png :results output graphics file :exports both :noweb yes
    par(mfrow=c(2,1))
    <<cc_boxplot>>
  #+end_src

  #+RESULTS:
  [[file:./img/ccTestSP23box.png]]

*** Boxplots and histograms
#+begin_src R :results graphics file :file ccSP23test1_2.png :noweb yes
  par(mfrow=c(2,2))
  <<cc_histogram>>
  <<cc_boxplot>>
#+end_src

#+RESULTS:
[[file:ccSP23test1_2.png]]

* Introduction to advanced data science DSC 205

- This section contains visualization of test results for the
  "Introduction to advanced data science" class DSC 205 in
  Spring 2023.

** Getting the data

- Enter vector data manually
- Non-writing participants are registered as ~NA~
- Tests carried different number of available points
#+name: ds2_data
#+begin_src R
  ## Test 1 had 12 points
  ds2_results_1 <- c(6.75, 9.25, 6.75, 7.25, 8.75, 7, 6, 8, NA)/12 * 100
  format(ds2_results_1,digits=3)
  ## Test 2 had 10 points
  ds2_results_2 <- c(7, 9.5, 10, 8.5, 10, 4, NA, 9, 9)/10 * 100
  format(ds2_results_2,digits=3)
#+end_src

#+RESULTS: ds2_data
: [1] "75.8" "52.5" "60.0" "48.4" "69.2"

** Plotting the data

Density distribution plotting:
- compute the averages for each results vector (without ~NA~)
- determine min and max values for the plotting window
- plot densities and averages and attach text labels
- Color palette are Illinsky and Steele's recommended colors (except
  white): red, green, yellow, blue, black, pink, cyan, gray, orange,
  brown, purple

  #+name: ds2_density
  #+begin_src R :file ./img/ds2TestSP23.png :results output graphics file :exports both
    ds2_avg_1 <- mean(ds2_results_1, na.rm=TRUE);
    ds2_density_1 <- density(ds2_results_1, na.rm=TRUE)
    ds2_avg_2 <- mean(ds2_results_2, na.rm=TRUE);
    ds2_density_2 <- density(ds2_results_2, na.rm=TRUE)
    plot(x=ds2_density_1, col="red", lwd=2,
         main="Test results DSC 205 - Spring 2023",
         xlab="Percentage (%)",
         xaxt="n",yaxt="n",ylab="")
    par(new=TRUE)
    plot(x=ds2_density_2, col="green", lwd=2,
         main="", xlab="", yaxt="n", ylab="")
    abline(v=ds2_avg_1, col="red", lty=3, lwd=2)
    abline(v=ds2_avg_2, col="green", lty=3, lwd=2)
    legend("topleft",
           legend=c(
             paste("Test 1 (",format(ds2_avg_1,digits=3),"%)"),
             paste("Test 2 (",format(ds2_avg_2,digits=3),"%)")),
           lwd=2, col=c(test1="red",
                        test2="green"),
           bty="n")
  #+end_src

  #+RESULTS: ds2_density
  [[file:./img/ds2TestSP23.png]]

* Machine learning DSC 305

- This section contains visualization of test results for the
  "Machine Learning" class DSC 305 in Spring 2023.

** Getting the data

Save test results to data frames:
- Save directory and individual files
- ~paste~ and save as ~file~ string for ~read.csv~
- import with ~read.csv~, ~header=TRUE~ and ~stringsAsFactors=TRUE~.

  #+name: ml_data
  #+begin_src R :exports both  :results output
    ml_dir <- c("w:/My Drive/spring23/ml/grades/")

    ml_test_1="2023-01-26T0908_Grades-DSC_305.csv"

    file_1 <- paste(ml_dir,ml_test_1,sep="")

    ml_test_1 <- read.csv(file_1, header=TRUE, stringsAsFactors=TRUE)

    ml_results_1 <- na.omit(ml_test_1$"Test.1..6737."[2:23])
    ml_results_1
  #+end_src

  #+RESULTS: ml_data
  :  [1]  9.37  8.03 11.43 10.73 11.17 12.20  8.40 10.00 11.43 11.40  9.65  8.17
  : [13]  8.40 10.17 12.33 11.47 10.00  8.73 11.73
  : attr(,"na.action")
  : [1] 14 19 22
  : attr(,"class")
  : [1] "omit"

** Plotting the data

Density distribution plotting:
- compute the averages for each results vector
- determine min and max values for the plotting window
- plot densities and averages and attach text labels
- in the text label, correct for participants who did not write the
  test

  #+name: ml_density
  #+begin_src R :file ./img/mlTest1SP23.png :results output graphics file :exports both
    ml_avg_1 <- mean(ml_results_1);
    ml_density_1 <- density(ml_results_1)

    par(mfrow=c(1,2),pty='s')
    hist(x=ml_results_1,
         main="Histogram",
         xlab="Points in [0,15]")

    plot(x=ml_density_1, col="black",
         main="Density estimate",
         xlab=paste("N=",length(ml_results_1),"participants"))
    abline(v=ml_avg_1, col="blue", lty=3)
    text(x=6, y=0.21, adj=0,
         col="blue",
         label=paste("mean:",
                     format(ml_avg_1,
                            digits=3)))
    ##           format(100*ml_avg_1/15,digits=3),
    ##           "%"));
  #+end_src

  #+RESULTS: ml_density
  [[file:./img/mlTest1SP23.png]]

* Digital humanities CSC 105

- This section contains visualization of test results for the
  "Digital Humanities - Text mining" class CSC 105 in
  Spring 2023.

** Getting the data

- Enter vector data manually
- Non-writing participants are registered as ~NA~
- Tests carried different number of available points
#+name: tm_data
#+begin_src R
  ## Test 1 had 20 points
  tm_results_1 <- c(15.17,10.5,12,9.67,13.83)/20 * 100
  format(tm_results_1,digits=3)
#+end_src

#+RESULTS: tm_data
: [1] "75.8" "52.5" "60.0" "48.4" "69.2"

** Plotting the data

Density distribution plotting:
- compute the averages for each results vector (without ~NA~)
- determine min and max values for the plotting window
- plot densities and averages and attach text labels
- Color palette are Illinsky and Steele's recommended colors (except
  white): red, green, yellow, blue, black, pink, cyan, gray, orange,
  brown, purple

  #+name: tm_density
  #+begin_src R :file ./img/tmTestSP23.png :results output graphics file :exports both
    tm_avg_1 <- mean(tm_results_1, na.rm=TRUE);
    tm_density_1 <- density(tm_results_1, na.rm=TRUE)
    plot(x=tm_density_1, col="red", lwd=2,
         main="Test results CSC 105 - Spring 2023",
         xlab="Percentage (%)",
         ylab="",yaxt="n")
    abline(v=tm_avg_1, col="red", lty=3, lwd=2)
    legend("topleft",
           legend=c(
             paste("Test 1 (",format(tm_avg_1,digits=3),"%)")),
           lwd=2, col=c(test1="red"),
           bty="n")
  #+end_src

  #+RESULTS: tm_density
  [[file:./img/tmTestSP23.png]]
