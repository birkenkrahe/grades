#+property: header-args:R :session *R* :results output
#+startup: overview hideblocks indent inlineimages
** Introduction to programming CSC 100
*** Getting the data

    Save test results to data frames:
    * Save directory and individual files
    * ~paste~ and save as ~file~ string for ~read.csv~
    * import with ~read.csv~, ~header=TRUE~ and ~stringsAsFactors=TRUE~.

    #+name: cc_data
    #+begin_src R :exports both :session :results output
      cc_dir <- c("w:/My Drive/spring22/cc100/quizzes/stats/")

      cc_test_1="Submission-Summary-Test-1-Intro-to-Programming-2022-02-14-130924.csv"
      cc_test_2="Submission-Summary-Test-2-Intro-to-Programming-2022-04-30-192242.csv"
      cc_test_3="Submission-Summary-Test-3-Introduction-to-programming-2022-04-30-192049.csv"

      file_1 <- paste(cc_dir,cc_test_1,sep="")
      file_2 <- paste(cc_dir,cc_test_2,sep="")
      file_3 <- paste(cc_dir,cc_test_3,sep="")

      cc_test_1 <- read.csv(file_1, header=TRUE, stringsAsFactors=TRUE)
      cc_test_2 <- read.csv(file_2, header=TRUE, stringsAsFactors=TRUE)
      cc_test_3 <- read.csv(file_3, header=TRUE, stringsAsFactors=TRUE)

      cc_results_1 <- na.omit(cc_test_1$Submission.Score)
      cc_results_1
      cc_results_2 <- na.omit(cc_test_2$Submission.Score)
      cc_results_2
      cc_results_3 <- na.omit(cc_test_3$Submission.Score) * 1.3333
      cc_results_3
    #+end_src

    #+RESULTS: cc_data
    #+begin_example
     [1]  8.07000 18.00000 16.16667 18.66667  9.50000 14.00000 14.75000 19.36000
     [9] 12.66000 15.00000 19.00000 12.12000 15.75000 16.50000 14.97000 14.10000
    [17] 10.21000  9.66000
    attr(,"na.action")
    [1] 6
    attr(,"class")
    [1] "omit"
     [1] 17.420000 17.000000  9.666667 15.166667 17.670000 15.666667 16.416667
     [8] 18.666667 17.500000 14.750000 20.000000 15.083333 16.166667 12.166667
     [1] 12.66635 11.99970 10.99972 18.66620 12.33302 17.33290 12.33302 19.99950
     [9]  9.33310 12.66635 16.66625 12.66635 15.33295  8.66645
    #+end_example

*** Plotting the data

    Density distribution plotting:
    * compute the averages for each results vector
    * determine min and max values for the plotting window
    * plot densities and averages and attach text labels

      #+name: cc_density
      #+begin_src R :file ./img/ccTestDensity.png :session *R* :results output graphics file :exports both
        cc_avg_1 <- mean(cc_results_1); cc_density_1 <- density(cc_results_1)
        cc_avg_2 <- mean(cc_results_2); cc_density_2 <- density(cc_results_2)
        cc_avg_3 <- mean(cc_results_3); cc_density_3 <- density(cc_results_3)

        ymin <- min(c(cc_density_1$y,cc_density_2$y,cc_density_3$y))
        ymax <- max(c(cc_density_1$y,cc_density_2$y,cc_density_3$y))
        xmin <- min(c(cc_density_1$x,cc_density_2$x,cc_density_3$x))
        xmax <- max(c(cc_density_1$x,cc_density_2$x,cc_density_3$x))

        plot(cc_density_1, col="blue",
             main="Test Results Introduction to\
        Programming in C/C++ CSC 100 Spring 2022",
        ylim=c(ymin,ymax), xlim=c(xmin,xmax))
        abline(v=cc_avg_1, col="blue", lty=3)
        text(x=17.2, y=0.105, col="blue", label=c("Test 1"));

        lines(cc_density_2, col="red")
        abline(v=cc_avg_2, col="red", lty=3)
        text(x=20, y=0.09, col="red", label=c("Test 2"));

        lines(cc_density_3, col="darkgreen")
        abline(v=cc_avg_3, col="darkgreen", lty=3)
        text(x=9, y=0.10, col="darkgreen", label=c("Test 3"));
      #+end_src

      #+RESULTS: cc_density
      [[file:./img/ccTestDensity.png]]
